"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.postsRouter = void 0;
const express_1 = require("express");
const authorization_check_middleware_1 = require("../midlewares/authorization-check-middleware");
const input_posts_validation_middleware_1 = require("../midlewares/input-posts-validation-middleware");
const auth_middleware_1 = require("../midlewares/auth-middleware");
const input_comments_content_middleware_1 = require("../midlewares/input-comments-content-middleware");
const soft_auth_middleware_1 = require("../midlewares/soft-auth-middleware");
const posts_controller_1 = require("./posts-controller");
exports.postsRouter = (0, express_1.Router)();
exports.postsRouter.get('/', posts_controller_1.postsControllerInstance.getAllPosts.bind(posts_controller_1.postsControllerInstance));
exports.postsRouter.get('/:id', posts_controller_1.postsControllerInstance.findPostById.bind(posts_controller_1.postsControllerInstance));
exports.postsRouter.post('/', authorization_check_middleware_1.checkAuthorization, ...input_posts_validation_middleware_1.validationPostsMiddleware, posts_controller_1.postsControllerInstance.createPost.bind(posts_controller_1.postsControllerInstance));
exports.postsRouter.put('/:id', authorization_check_middleware_1.checkAuthorization, ...input_posts_validation_middleware_1.validationPostsMiddleware, posts_controller_1.postsControllerInstance.updatePost.bind(posts_controller_1.postsControllerInstance));
exports.postsRouter.delete('/:id', authorization_check_middleware_1.checkAuthorization, posts_controller_1.postsControllerInstance.deletePost.bind(posts_controller_1.postsControllerInstance));
exports.postsRouter.post('/:id/comments', auth_middleware_1.authMiddleware, input_comments_content_middleware_1.validationCommentsContentMiddleware, posts_controller_1.postsControllerInstance.createCommetByPostId.bind(posts_controller_1.postsControllerInstance));
exports.postsRouter.get('/:id/comments', soft_auth_middleware_1.softAuthMiddleware, posts_controller_1.postsControllerInstance.findCommentsByPostId.bind(posts_controller_1.postsControllerInstance));
exports.postsRouter.put('/:id/like-status', authorization_check_middleware_1.checkAuthorization, posts_controller_1.postsControllerInstance.likePostUpdate.bind(posts_controller_1.postsControllerInstance));
